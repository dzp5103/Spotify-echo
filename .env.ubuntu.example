# EchoTune AI - Ubuntu DigitalOcean Production Environment Configuration
# This file contains Ubuntu-specific production environment variables
# Copy this to .env and update with your actual values

# =============================================================================
# PRODUCTION DEPLOYMENT SETTINGS
# =============================================================================
NODE_ENV=production
ENVIRONMENT=ubuntu-digitalocean
DEPLOYMENT_TYPE=docker-compose

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Main application server
PORT=3000
HOST=0.0.0.0

# MCP Server configuration
MCP_PORT=3001
MCP_HOST=0.0.0.0

# Domain and SSL settings (update with your domain)
DOMAIN=your-domain.com
SSL_EMAIL=admin@your-domain.com

# =============================================================================
# SPOTIFY API CONFIGURATION
# =============================================================================
# Get these from https://developer.spotify.com/dashboard
SPOTIFY_CLIENT_ID=your_spotify_client_id
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret
SPOTIFY_REDIRECT_URI=https://your-domain.com/callback

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# MongoDB Configuration (use MongoDB Atlas for production)
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/echotune?retryWrites=true&w=majority
MONGODB_USERNAME=echotune
MONGODB_PASSWORD=your_secure_mongodb_password

# PostgreSQL Configuration (DigitalOcean Managed Database option)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your_supabase_anon_key
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# Local MongoDB (for development/testing)
# MONGODB_URI=mongodb://echotune:echotune_mongo_2024@mongodb:27017/echotune?authSource=admin

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
REDIS_URL=redis://:echotune_redis_2024@redis:6379
REDIS_PASSWORD=echotune_redis_2024

# =============================================================================
# AI/ML PROVIDER CONFIGURATION
# =============================================================================
# Primary LLM Provider
LLM_PROVIDER=gemini

# Google Gemini API
GEMINI_API_KEY=your_gemini_api_key

# OpenAI API (alternative/fallback)
OPENAI_API_KEY=your_openai_api_key

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
# Session configuration
SESSION_SECRET=your_very_secure_session_secret_ubuntu_2024
JWT_SECRET=your_very_secure_jwt_secret_ubuntu_2024

# GitHub PAT for CI/CD integration
GH_PAT=your_github_personal_access_token

# DigitalOcean API for deployment automation
DO_API_TOKEN=your_digitalocean_api_token

# =============================================================================
# MCP SERVER CONFIGURATION
# =============================================================================
# Browser automation settings
PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
HEADLESS_BROWSER=true

# MCP server security
MCP_AUTH_TOKEN=your_secure_mcp_auth_token

# =============================================================================
# MONITORING & LOGGING
# =============================================================================
# Grafana configuration
GRAFANA_USER=admin
GRAFANA_PASSWORD=echotune_grafana_2024

# Log levels
LOG_LEVEL=info
DEBUG=false

# Sentry error tracking (optional)
SENTRY_DSN=your_sentry_dsn_url

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================
# SMTP settings for notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_app_password
FROM_EMAIL=noreply@your-domain.com

# =============================================================================
# EXTERNAL API INTEGRATIONS
# =============================================================================
# Additional music services (optional)
LAST_FM_API_KEY=your_lastfm_api_key
LAST_FM_SECRET=your_lastfm_secret

# Weather API for mood-based recommendations (optional)
WEATHER_API_KEY=your_weather_api_key

# =============================================================================
# PERFORMANCE & CACHING
# =============================================================================
# Cache settings
CACHE_TTL=3600
CACHE_MAX_SIZE=1000

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# UBUNTU-SPECIFIC SETTINGS
# =============================================================================
# System paths
APP_DIR=/opt/echotune
LOG_DIR=/opt/echotune/logs
DATA_DIR=/opt/echotune/data
BACKUP_DIR=/opt/echotune/backups

# User and group
APP_USER=echotune
APP_GROUP=echotune

# SSL certificate paths (for Let's Encrypt)
SSL_CERT_PATH=/etc/letsencrypt/live/your-domain.com/fullchain.pem
SSL_KEY_PATH=/etc/letsencrypt/live/your-domain.com/privkey.pem

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================
# Docker network
DOCKER_NETWORK=echotune-network

# Container names
CONTAINER_NAME_APP=echotune-app
CONTAINER_NAME_MCP=echotune-mcp
CONTAINER_NAME_NGINX=echotune-nginx
CONTAINER_NAME_REDIS=echotune-redis
CONTAINER_NAME_MONGODB=echotune-mongodb

# =============================================================================
# BACKUP & MAINTENANCE
# =============================================================================
# Backup settings
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=7
BACKUP_S3_BUCKET=your-backup-bucket

# Maintenance window
MAINTENANCE_WINDOW=02:00-04:00
AUTO_UPDATE_ENABLED=true

# =============================================================================
# DIGITALOCEAN SPECIFIC
# =============================================================================
# DigitalOcean Spaces (for file storage)
DO_SPACES_ENDPOINT=https://nyc3.digitaloceanspaces.com
DO_SPACES_BUCKET=your-spaces-bucket
DO_SPACES_KEY=your_spaces_access_key
DO_SPACES_SECRET=your_spaces_secret_key

# DigitalOcean Load Balancer (if using)
LOAD_BALANCER_ID=your_load_balancer_id

# DigitalOcean Managed Database (if using)
DO_DB_HOST=your-db-cluster.db.ondigitalocean.com
DO_DB_PORT=25060
DO_DB_USER=your_db_user
DO_DB_PASSWORD=your_db_password
DO_DB_NAME=echotune

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Enable/disable features
ENABLE_MCP_SERVER=true
ENABLE_MONITORING=true
ENABLE_AUTO_BACKUP=true
ENABLE_SSL_AUTO_RENEWAL=true
ENABLE_FAIL2BAN=true
ENABLE_UFW_FIREWALL=true

# Development features (disable in production)
ENABLE_DEBUG_LOGS=false
ENABLE_HOT_RELOAD=false
ENABLE_MOCK_SERVICES=false

# =============================================================================
# HEALTH CHECK CONFIGURATION
# =============================================================================
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRIES=3

# External health check endpoint
HEALTH_CHECK_URL=https://your-domain.com/health

# =============================================================================
# ANALYTICS & METRICS
# =============================================================================
# Google Analytics (optional)
GA_TRACKING_ID=your_google_analytics_id

# Custom analytics
ANALYTICS_ENABLED=true
METRICS_COLLECTION_INTERVAL=60

# =============================================================================
# SECURITY HEADERS & CORS
# =============================================================================
# CORS settings
CORS_ORIGIN=https://your-domain.com
CORS_CREDENTIALS=true

# Security headers
HELMET_ENABLED=true
CSP_ENABLED=true
HSTS_MAX_AGE=31536000

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
# Node.js optimization
NODE_OPTIONS=--max-old-space-size=2048
UV_THREADPOOL_SIZE=4

# Nginx optimization
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024

# =============================================================================
# TIMEZONE & LOCALIZATION
# =============================================================================
TZ=UTC
LOCALE=en_US.UTF-8

# =============================================================================
# ADDITIONAL NOTES
# =============================================================================
# 1. Replace all placeholder values with your actual configuration
# 2. Store sensitive values in GitHub Secrets for CI/CD
# 3. Use strong, unique passwords for all services
# 4. Enable SSL certificates using Let's Encrypt
# 5. Configure firewall rules appropriately
# 6. Set up monitoring and alerting
# 7. Create regular backups
# 8. Test all configurations in staging environment first