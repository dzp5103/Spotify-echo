openapi: 3.0.3
info:
  title: EchoTune AI API
  description: |
    EchoTune AI provides a comprehensive REST API for music recommendation and Spotify integration.
    This API enables developers to build music discovery applications with AI-powered recommendations,
    conversational interfaces, and seamless Spotify integration.
    
    ## Features
    - ðŸŽ§ Personalized music recommendations using advanced ML algorithms
    - ðŸ¤– Conversational AI for natural language music discovery
    - ðŸŽµ Spotify Web API integration with OAuth 2.0
    - ðŸ“Š Real-time analytics and user listening insights
    - ðŸ”„ Smart playlist generation and management
    
    ## Authentication
    All endpoints require valid Spotify OAuth 2.0 access tokens unless specified otherwise.
    
  version: 2.1.0
  contact:
    name: EchoTune AI Support
    url: https://github.com/dzp5103/Spotify-echo
    email: support@echotune.ai
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://your-domain.com/api
    description: Production server
  - url: http://localhost:3000/api
    description: Development server

security:
  - SpotifyOAuth: []

paths:
  /health:
    get:
      summary: Health Check
      description: Get the current health status of the API and its dependencies
      tags:
        - System
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recommendations:
    get:
      summary: Get Music Recommendations
      description: |
        Get personalized music recommendations based on user preferences, listening history, 
        and advanced ML algorithms. Supports various seeding options including artists, 
        genres, and tracks.
      tags:
        - Recommendations
      parameters:
        - name: limit
          in: query
          description: Number of recommendations to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: seed_artists
          in: query
          description: Comma-separated list of Spotify artist IDs for seeding
          required: false
          schema:
            type: string
            example: "4NHQUGzhtTLFvgF5SZesLK,06HL4z0CvFAxyc27GXpf02"
        - name: seed_genres
          in: query
          description: Comma-separated list of genre names for seeding
          required: false
          schema:
            type: string
            example: "rock,pop,electronic"
        - name: seed_tracks
          in: query
          description: Comma-separated list of Spotify track IDs for seeding
          required: false
          schema:
            type: string
            example: "4iV5W9uYEdYUVa79Axb7Rh,1301WleyT98MSxVHPZCA6M"
        - name: target_energy
          in: query
          description: Target energy level (0.0 to 1.0)
          required: false
          schema:
            type: number
            minimum: 0.0
            maximum: 1.0
        - name: target_valence
          in: query
          description: Target valence/positivity (0.0 to 1.0)
          required: false
          schema:
            type: number
            minimum: 0.0
            maximum: 1.0
      responses:
        '200':
          description: Successful recommendations response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationsResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /chat:
    post:
      summary: Chat with AI Music Assistant
      description: |
        Send a message to the AI music assistant and receive personalized responses
        with music recommendations, playlist suggestions, and conversational guidance.
      tags:
        - Chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Successful chat response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: AI service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /spotify/user/profile:
    get:
      summary: Get User Profile
      description: Get the current user's Spotify profile information
      tags:
        - Spotify
      responses:
        '200':
          description: User profile data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotifyUser'
        '401':
          description: Invalid or expired Spotify token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /spotify/user/top-tracks:
    get:
      summary: Get User's Top Tracks
      description: Get the user's top tracks from Spotify
      tags:
        - Spotify
      parameters:
        - name: time_range
          in: query
          description: Time range for top tracks
          required: false
          schema:
            type: string
            enum: [short_term, medium_term, long_term]
            default: medium_term
        - name: limit
          in: query
          description: Number of tracks to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
      responses:
        '200':
          description: User's top tracks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopTracksResponse'

  /playlists:
    get:
      summary: Get User Playlists
      description: Get all playlists for the authenticated user
      tags:
        - Playlists
      responses:
        '200':
          description: User's playlists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistsResponse'
    
    post:
      summary: Create Playlist
      description: Create a new playlist with AI-recommended tracks
      tags:
        - Playlists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlaylistRequest'
      responses:
        '201':
          description: Playlist created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistResponse'

  /analytics/listening-history:
    get:
      summary: Get Listening Analytics
      description: Get detailed analytics about user's listening patterns and preferences
      tags:
        - Analytics
      parameters:
        - name: period
          in: query
          description: Analytics time period
          required: false
          schema:
            type: string
            enum: [7d, 30d, 90d, 1y]
            default: 30d
      responses:
        '200':
          description: Listening analytics data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsResponse'

components:
  securitySchemes:
    SpotifyOAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Spotify OAuth 2.0 access token

  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
          example: "2.1.0"
        services:
          type: object
          properties:
            database:
              $ref: '#/components/schemas/ServiceHealth'
            spotify_api:
              $ref: '#/components/schemas/ServiceHealth'
            ai_providers:
              $ref: '#/components/schemas/ServiceHealth'
        uptime:
          type: number
          description: Uptime in seconds

    ServiceHealth:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy, degraded]
        response_time:
          type: number
          description: Response time in milliseconds
        last_check:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        timestamp:
          type: string
          format: date-time
        request_id:
          type: string
          description: Unique request identifier

    RecommendationsResponse:
      type: object
      properties:
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/RecommendedTrack'
        total:
          type: integer
        algorithm:
          type: string
          description: Algorithm used for recommendations
        execution_time:
          type: number
          description: Processing time in milliseconds

    RecommendedTrack:
      type: object
      properties:
        id:
          type: string
          description: Spotify track ID
        name:
          type: string
          description: Track name
        artists:
          type: array
          items:
            $ref: '#/components/schemas/Artist'
        album:
          $ref: '#/components/schemas/Album'
        audio_features:
          $ref: '#/components/schemas/AudioFeatures'
        recommendation_score:
          type: number
          minimum: 0
          maximum: 1
          description: Confidence score for this recommendation
        preview_url:
          type: string
          nullable: true
          description: URL for 30-second track preview

    Artist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        genres:
          type: array
          items:
            type: string
        popularity:
          type: integer
          minimum: 0
          maximum: 100

    Album:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        release_date:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/SpotifyImage'

    SpotifyImage:
      type: object
      properties:
        url:
          type: string
        height:
          type: integer
        width:
          type: integer

    AudioFeatures:
      type: object
      properties:
        danceability:
          type: number
          minimum: 0
          maximum: 1
        energy:
          type: number
          minimum: 0
          maximum: 1
        valence:
          type: number
          minimum: 0
          maximum: 1
        acousticness:
          type: number
          minimum: 0
          maximum: 1
        instrumentalness:
          type: number
          minimum: 0
          maximum: 1
        liveness:
          type: number
          minimum: 0
          maximum: 1
        speechiness:
          type: number
          minimum: 0
          maximum: 1
        tempo:
          type: number
          description: Track tempo in BPM

    ChatRequest:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: User message to the AI assistant
          maxLength: 1000
        context:
          type: object
          description: Additional context for the conversation
          properties:
            current_track:
              type: string
              description: Currently playing track ID
            mood:
              type: string
              description: User's current mood
            activity:
              type: string
              description: Current activity (workout, study, etc.)

    ChatResponse:
      type: object
      properties:
        message:
          type: string
          description: AI assistant response
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/RecommendedTrack'
        intent:
          type: object
          description: Detected user intent
        provider:
          type: string
          description: AI provider used (openai, gemini, mock)
        processing_time:
          type: number
          description: Response generation time in milliseconds

    SpotifyUser:
      type: object
      properties:
        id:
          type: string
        display_name:
          type: string
        email:
          type: string
        country:
          type: string
        followers:
          type: object
          properties:
            total:
              type: integer
        images:
          type: array
          items:
            $ref: '#/components/schemas/SpotifyImage'

    TopTracksResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RecommendedTrack'
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer

    PlaylistsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Playlist'
        total:
          type: integer

    Playlist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        public:
          type: boolean
        tracks:
          type: object
          properties:
            total:
              type: integer
        owner:
          type: object
          properties:
            id:
              type: string
            display_name:
              type: string

    CreatePlaylistRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Playlist name
          maxLength: 100
        description:
          type: string
          description: Playlist description
          maxLength: 300
        public:
          type: boolean
          default: false
        track_count:
          type: integer
          minimum: 1
          maximum: 50
          default: 20
        seed_data:
          type: object
          description: Seed data for AI recommendations
          properties:
            genres:
              type: array
              items:
                type: string
            artists:
              type: array
              items:
                type: string
            mood:
              type: string

    PlaylistResponse:
      type: object
      properties:
        playlist:
          $ref: '#/components/schemas/Playlist'
        tracks_added:
          type: integer
        creation_time:
          type: number
          description: Playlist creation time in milliseconds

    AnalyticsResponse:
      type: object
      properties:
        period:
          type: string
        total_listening_time:
          type: number
          description: Total listening time in minutes
        top_genres:
          type: array
          items:
            type: object
            properties:
              genre:
                type: string
              percentage:
                type: number
        top_artists:
          type: array
          items:
            type: object
            properties:
              artist:
                $ref: '#/components/schemas/Artist'
              play_count:
                type: integer
        listening_patterns:
          type: object
          properties:
            by_hour:
              type: array
              items:
                type: object
                properties:
                  hour:
                    type: integer
                  play_count:
                    type: integer
            by_day:
              type: array
              items:
                type: object
                properties:
                  day:
                    type: string
                  play_count:
                    type: integer
        audio_features_avg:
          $ref: '#/components/schemas/AudioFeatures'

tags:
  - name: System
    description: System health and status endpoints
  - name: Recommendations
    description: Music recommendation algorithms and endpoints
  - name: Chat
    description: Conversational AI music assistant
  - name: Spotify
    description: Spotify Web API integration
  - name: Playlists
    description: Playlist creation and management
  - name: Analytics
    description: User listening analytics and insights