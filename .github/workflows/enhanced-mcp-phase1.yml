name: Phase 1 - Enhanced MCP Multimodel Agent Workflow

on:
  pull_request:
    types: [opened, synchronize, ready_for_review, labeled]
    branches: [main, develop]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      workflow_type:
        description: "Coding agent workflow type"
        required: true
        default: "code-review-and-optimization"
        type: choice
        options:
          - full-stack-development
          - code-review-and-optimization
          - bug-diagnosis-and-fix
          - feature-development
          - system-architecture
      model_preference:
        description: "Preferred AI model"
        required: false
        default: "auto"
        type: choice
        options:
          - auto
          - gpt-5
          - gpt-5-chat
          - gpt-5-turbo
          - gpt-4-turbo
          - gemini-2.0-flash-exp
          - claude-3.5-sonnet
      target_path:
        description: "Target file(s) or directory"
        required: false
        type: string
      requirements:
        description: "Specific requirements or focus areas"
        required: false
        type: string
  repository_dispatch:
    types: [enhanced-mcp-workflow]

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || secrets.COPILOT_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
  NODE_ENV: development
  AUTH_DEVELOPMENT_MODE: true

jobs:
  enhanced-mcp-validation:
    runs-on: ubuntu-latest
    name: Enhanced MCP System Validation
    outputs:
      mcp_health: ${{ steps.mcp-check.outputs.health_status }}
      models_available: ${{ steps.model-check.outputs.models_count }}
      workflow_ready: ${{ steps.workflow-check.outputs.ready }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci
          npm run enhanced-mcp:test

      - name: MCP System Health Check
        id: mcp-check
        run: |
          # Test enhanced MCP components
          echo "Testing Enhanced MCP System..."
          
          # Start server for testing
          timeout 30s npm start &
          SERVER_PID=$!
          sleep 10
          
          # Test enhanced MCP endpoints
          HEALTH=$(curl -s http://localhost:3000/api/enhanced-mcp/health || echo "failed")
          MODELS=$(curl -s http://localhost:3000/api/enhanced-mcp/models || echo "failed")
          CAPABILITIES=$(curl -s http://localhost:3000/api/enhanced-mcp/capabilities || echo "failed")
          
          # Stop server
          kill $SERVER_PID || true
          
          if [[ "$HEALTH" == "failed" || "$MODELS" == "failed" || "$CAPABILITIES" == "failed" ]]; then
            echo "health_status=degraded" >> $GITHUB_OUTPUT
            echo "⚠️ Enhanced MCP system partially available"
          else
            echo "health_status=healthy" >> $GITHUB_OUTPUT
            echo "✅ Enhanced MCP system fully operational"
          fi

      - name: Model Availability Check
        id: model-check
        run: |
          # Check available models
          MODELS_COUNT=$(node -e "
            const MultiModelOrchestrator = require('./src/mcp/enhanced-multimodel-orchestrator');
            const orchestrator = new MultiModelOrchestrator();
            const stats = orchestrator.getModelStatistics();
            console.log(Object.keys(stats).length);
          ")
          
          echo "models_count=$MODELS_COUNT" >> $GITHUB_OUTPUT
          echo "📊 $MODELS_COUNT AI models available"

      - name: Workflow System Check
        id: workflow-check
        run: |
          # Test workflow integration manager
          WORKFLOW_TEST=$(node -e "
            const WorkflowManager = require('./src/mcp/workflow-integration-manager');
            const manager = new WorkflowManager();
            const status = manager.getWorkflowStatus();
            console.log('ready');
          " || echo "failed")
          
          if [[ "$WORKFLOW_TEST" == "ready" ]]; then
            echo "ready=true" >> $GITHUB_OUTPUT
            echo "✅ Workflow integration system ready"
          else
            echo "ready=false" >> $GITHUB_OUTPUT
            echo "❌ Workflow integration system not ready"
          fi

  execute-enhanced-workflow:
    needs: enhanced-mcp-validation
    runs-on: ubuntu-latest
    if: needs.enhanced-mcp-validation.outputs.workflow_ready == 'true'
    name: Execute Enhanced Coding Agent Workflow
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Parse Workflow Parameters
        id: parse
        run: |
          WORKFLOW_TYPE="${{ github.event.inputs.workflow_type || 'code-review-and-optimization' }}"
          MODEL_PREFERENCE="${{ github.event.inputs.model_preference || 'auto' }}"
          TARGET_PATH="${{ github.event.inputs.target_path || 'src/' }}"
          REQUIREMENTS="${{ github.event.inputs.requirements || 'security,performance,maintainability' }}"
          
          echo "workflow_type=$WORKFLOW_TYPE" >> $GITHUB_OUTPUT
          echo "model_preference=$MODEL_PREFERENCE" >> $GITHUB_OUTPUT
          echo "target_path=$TARGET_PATH" >> $GITHUB_OUTPUT
          echo "requirements=$REQUIREMENTS" >> $GITHUB_OUTPUT
          
          echo "🚀 Workflow: $WORKFLOW_TYPE"
          echo "🤖 Model: $MODEL_PREFERENCE"
          echo "📁 Target: $TARGET_PATH"
          echo "📋 Requirements: $REQUIREMENTS"

      - name: Execute Multimodel Coding Workflow
        id: workflow
        run: |
          # Start server
          timeout 60s npm start &
          SERVER_PID=$!
          sleep 15
          
          # Execute workflow based on type
          WORKFLOW_TYPE="${{ steps.parse.outputs.workflow_type }}"
          TARGET_PATH="${{ steps.parse.outputs.target_path }}"
          REQUIREMENTS="${{ steps.parse.outputs.requirements }}"
          
          case "$WORKFLOW_TYPE" in
            "full-stack-development")
              RESPONSE=$(curl -s -X POST http://localhost:3000/api/enhanced-mcp/workflow/full-stack \
                -H "Content-Type: application/json" \
                -d "{\"requirements\": \"$REQUIREMENTS\", \"technology_stack\": \"Node.js + React + MongoDB\"}")
              ;;
            "code-review-and-optimization")
              RESPONSE=$(curl -s -X POST http://localhost:3000/api/enhanced-mcp/workflow/code-review \
                -H "Content-Type: application/json" \
                -d "{\"code_path\": \"$TARGET_PATH\", \"focus_areas\": [\"security\", \"performance\", \"maintainability\"]}")
              ;;
            "bug-diagnosis-and-fix")
              RESPONSE=$(curl -s -X POST http://localhost:3000/api/enhanced-mcp/workflow/bug-fix \
                -H "Content-Type: application/json" \
                -d "{\"bug_description\": \"$REQUIREMENTS\", \"affected_files\": [\"$TARGET_PATH\"]}")
              ;;
            *)
              RESPONSE=$(curl -s -X POST http://localhost:3000/api/enhanced-mcp/workflow/execute \
                -H "Content-Type: application/json" \
                -d "{\"workflowType\": \"$WORKFLOW_TYPE\", \"parameters\": {\"requirements\": \"$REQUIREMENTS\", \"target_path\": \"$TARGET_PATH\"}}")
              ;;
          esac
          
          # Stop server
          kill $SERVER_PID || true
          
          echo "Response: $RESPONSE"
          
          # Check if workflow was successful
          if echo "$RESPONSE" | grep -q '"success".*true'; then
            echo "success=true" >> $GITHUB_OUTPUT
            echo "✅ Workflow executed successfully"
          else
            echo "success=false" >> $GITHUB_OUTPUT
            echo "❌ Workflow execution failed"
          fi
          
          # Save response for artifact
          echo "$RESPONSE" > workflow-results.json

      - name: Generate Workflow Report
        if: always()
        run: |
          cat > workflow-report.md << 'EOF'
          # Enhanced MCP Workflow Execution Report
          
          ## Workflow Details
          - **Type**: ${{ steps.parse.outputs.workflow_type }}
          - **Model Preference**: ${{ steps.parse.outputs.model_preference }}
          - **Target Path**: ${{ steps.parse.outputs.target_path }}
          - **Requirements**: ${{ steps.parse.outputs.requirements }}
          - **Execution Time**: $(date)
          
          ## System Status
          - **MCP Health**: ${{ needs.enhanced-mcp-validation.outputs.mcp_health }}
          - **Available Models**: ${{ needs.enhanced-mcp-validation.outputs.models_available }}
          - **Workflow Ready**: ${{ needs.enhanced-mcp-validation.outputs.workflow_ready }}
          
          ## Execution Results
          - **Success**: ${{ steps.workflow.outputs.success }}
          
          ## Enhanced Features Available
          - ✅ Multimodel AI orchestration (GPT-5, Gemini, Claude)
          - ✅ Advanced workflow automation
          - ✅ MCP server integration
          - ✅ Real-time coding agent capabilities
          - ✅ Production-ready authentication and security
          
          ## Next Phase Readiness
          The platform is now equipped with:
          - Enhanced MCP validation and monitoring
          - Multimodel AI integration for optimal task execution
          - Comprehensive workflow automation for coding agent development
          - Advanced security and performance infrastructure
          
          EOF

      - name: Upload Workflow Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: enhanced-mcp-workflow-results
          path: |
            workflow-results.json
            workflow-report.md
          retention-days: 30

      - name: Comment Workflow Results
        if: github.event_name == 'pull_request' || github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let report = '';
            try {
              report = fs.readFileSync('workflow-report.md', 'utf8');
            } catch (error) {
              report = `# Enhanced MCP Workflow Report\n\n⚠️ Report generation failed: ${error.message}`;
            }
            
            const comment = `## 🚀 Enhanced MCP Workflow Execution\n\n${report}\n\n---\n*Generated by Enhanced MCP Multimodel Agent Workflow*`;
            
            if (context.eventName === 'pull_request') {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  deployment-readiness:
    needs: [enhanced-mcp-validation, execute-enhanced-workflow]
    runs-on: ubuntu-latest
    if: always()
    name: Phase 1 Deployment Readiness Assessment
    steps:
      - name: Assess Readiness for Next Phase
        run: |
          MCP_HEALTH="${{ needs.enhanced-mcp-validation.outputs.mcp_health }}"
          WORKFLOW_SUCCESS="${{ needs.execute-enhanced-workflow.outputs.success }}"
          MODELS_COUNT="${{ needs.enhanced-mcp-validation.outputs.models_available }}"
          
          echo "## Phase 1 Readiness Assessment" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| MCP System Health | $MCP_HEALTH |" >> $GITHUB_STEP_SUMMARY
          echo "| Available AI Models | $MODELS_COUNT |" >> $GITHUB_STEP_SUMMARY
          echo "| Workflow Execution | $WORKFLOW_SUCCESS |" >> $GITHUB_STEP_SUMMARY
          
          if [[ "$MCP_HEALTH" == "healthy" && "$MODELS_COUNT" -ge 4 ]]; then
            echo "| **Overall Status** | ✅ Ready for Phase 1 Development |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🎉 **The platform is ready for Phase 1 advanced features:**" >> $GITHUB_STEP_SUMMARY
            echo "- Enhanced MCP server ecosystem" >> $GITHUB_STEP_SUMMARY
            echo "- Multimodel AI orchestration" >> $GITHUB_STEP_SUMMARY
            echo "- Advanced workflow automation" >> $GITHUB_STEP_SUMMARY
            echo "- Real-time coding agent capabilities" >> $GITHUB_STEP_SUMMARY
            echo "- Production-grade security and performance" >> $GITHUB_STEP_SUMMARY
          else
            echo "| **Overall Status** | ⚠️ Requires attention before Phase 1 |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🔧 **Issues to address:**" >> $GITHUB_STEP_SUMMARY
            [[ "$MCP_HEALTH" != "healthy" ]] && echo "- MCP system health needs improvement" >> $GITHUB_STEP_SUMMARY
            [[ "$MODELS_COUNT" -lt 4 ]] && echo "- Insufficient AI models available" >> $GITHUB_STEP_SUMMARY
          fi