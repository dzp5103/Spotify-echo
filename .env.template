# =============================================================================
# EchoTune AI - Production Environment Template
# Generated automatically via Phase 2 validation process
# 
# INSTRUCTIONS: 
# 1. Copy this file: cp .env.template .env
# 2. Fill in all REQUIRED values marked with [REQUIRED]
# 3. Review and customize OPTIONAL values as needed
# 4. Test configuration with: npm run validate:env
# =============================================================================

# =============================================================================
# üöÄ CORE APPLICATION SETTINGS
# =============================================================================

# Server Configuration [REQUIRED]
NODE_ENV=production                    # Environment: development, production, test
PORT=3000                             # Port the server listens on
HOST=0.0.0.0                         # Host address to bind to
DOMAIN=                               # [REQUIRED] Production domain (e.g., yourdomain.com)
FRONTEND_URL=                         # [REQUIRED] Complete frontend URL with protocol

# Security & Session [REQUIRED]
JWT_SECRET=                           # [REQUIRED] JWT token signing secret (generate strong random string)
SESSION_SECRET=                       # [REQUIRED] Session cookie signing secret (generate strong random string)

# =============================================================================
# üéµ SPOTIFY INTEGRATION [REQUIRED]
# =============================================================================

SPOTIFY_CLIENT_ID=                    # [REQUIRED] Spotify App Client ID from developer.spotify.com
SPOTIFY_CLIENT_SECRET=                # [REQUIRED] Spotify App Client Secret
SPOTIFY_REDIRECT_URI=http://localhost:3000/callback  # OAuth redirect URI (update for production)

# Spotify API Configuration [OPTIONAL]
SPOTIFY_API_CACHE_TTL=300            # Spotify API response cache duration in seconds
CACHE_SPOTIFY_API_TTL=300            # Cache TTL for Spotify API calls
CACHE_AUDIO_FEATURES_TTL=86400       # Audio features cache TTL (24 hours)
CACHE_RECOMMENDATIONS_TTL=1800       # Recommendations cache TTL (30 minutes)
CACHE_USER_PROFILES_TTL=3600         # User profiles cache TTL (1 hour)

# =============================================================================
# ü§ñ AI & LLM PROVIDER CONFIGURATION [CHOOSE AT LEAST ONE]
# =============================================================================

# Default Provider Selection
DEFAULT_LLM_PROVIDER=gemini           # Primary LLM provider: gemini, openai, openrouter, anthropic
DEFAULT_LLM_MODEL=gemini-2.0-flash   # Default model for the selected provider

# Google Gemini [RECOMMENDED]
GEMINI_API_KEY=                       # Google AI API key from ai.google.dev
GEMINI_MODEL=gemini-2.0-flash        # Model: gemini-2.0-flash, gemini-1.5-pro, gemini-1.5-flash

# OpenAI
OPENAI_API_KEY=                       # OpenAI API key from platform.openai.com
OPENAI_MODEL=gpt-3.5-turbo           # Model: gpt-4, gpt-3.5-turbo, gpt-4-turbo

# OpenRouter (Multiple Models)
OPENROUTER_API_KEY=                   # OpenRouter API key from openrouter.ai
OPENROUTER_MODEL=anthropic/claude-3-haiku  # Model from OpenRouter catalog

# Anthropic Claude (Direct)
ANTHROPIC_API_KEY=                    # Anthropic API key from console.anthropic.com
ANTHROPIC_MODEL=claude-3-haiku-20240307  # Model: claude-3-opus, claude-3-sonnet, claude-3-haiku

# Azure OpenAI [ENTERPRISE]
AZURE_OPENAI_API_KEY=                 # Azure OpenAI API key
AZURE_OPENAI_ENDPOINT=                # Azure OpenAI endpoint URL
AZURE_OPENAI_DEPLOYMENT=              # Azure OpenAI deployment name
AZURE_CLIENT_ID=                      # Azure AD App Client ID (for OAuth)
AZURE_CLIENT_SECRET=                  # Azure AD App Client Secret

# Additional AI Services [OPTIONAL]
LANGFUSE_PUBLIC_KEY=                  # Langfuse LLM observability public key
LANGFUSE_SECRET_KEY=                  # Langfuse LLM observability secret key
GOOGLE_API_KEY=                       # Google Cloud API key for additional services
YOUTUBE_API_KEY=                      # YouTube Data API key for music integration

# =============================================================================
# üóÑÔ∏è DATABASE CONFIGURATION [REQUIRED]
# =============================================================================

# MongoDB (Primary) [REQUIRED]
MONGODB_URI=                          # [REQUIRED] MongoDB connection string
MONGODB_DATABASE=echotune             # Database name
MONGODB_DB_NAME=echotune              # Alternative database name variable

# MongoDB Advanced Configuration [OPTIONAL]
MONGODB_MAX_POOL_SIZE=10              # Maximum connection pool size
MONGODB_MIN_POOL_SIZE=2               # Minimum connection pool size
MONGODB_MAX_IDLE_TIME=30000           # Max idle time in milliseconds
MONGODB_CONNECT_TIMEOUT=30000         # Connection timeout
MONGODB_SOCKET_TIMEOUT=45000          # Socket timeout
MONGODB_COLLECTIONS_PREFIX=           # Prefix for collection names

# SQLite Fallback [OPTIONAL]
ENABLE_SQLITE_FALLBACK=true           # Enable SQLite when MongoDB unavailable
DATABASE_PATH=./databases/echotune.db # SQLite database file path
SQLITE_DB_PATH=./databases/echotune.db # Alternative SQLite path variable
DATABASE_URL=                         # Generic database URL for compatibility

# Redis Cache [OPTIONAL - Recommended for Production]
REDIS_URL=redis://localhost:6379      # Redis connection URL
REDIS_PASSWORD=                       # Redis authentication password
REDIS_USERNAME=                       # Redis username (Redis 6+)
REDIS_KEY_PREFIX=echotune:            # Prefix for all Redis keys
REDIS_DEFAULT_TTL=3600                # Default TTL for cached items
REDIS_MAX_RETRIES=3                   # Maximum retry attempts
REDIS_CONNECT_TIMEOUT=5000            # Connection timeout in milliseconds

# Supabase (Alternative) [OPTIONAL]
SUPABASE_URL=                         # Supabase project URL
SUPABASE_ANON_KEY=                    # Supabase anonymous key

# =============================================================================
# üîí SSL & SECURITY CONFIGURATION
# =============================================================================

# SSL/TLS Settings [REQUIRED FOR PRODUCTION]
SSL_ENABLED=true                      # Enable SSL/TLS encryption
SSL_CERT_PATH=/etc/ssl/certs/cert.pem # Path to SSL certificate file
SSL_KEY_PATH=/etc/ssl/private/key.pem # Path to SSL private key file
SSL_CHAIN_PATH=                       # Path to certificate chain file (optional)
SSL_EMAIL=                            # [REQUIRED] Email for Let's Encrypt registration

# HTTPS Configuration
FORCE_HTTPS=true                      # Redirect HTTP to HTTPS
ENABLE_SECURITY_HEADERS=true          # Enable security headers

# Rate Limiting [RECOMMENDED]
RATE_LIMIT_WINDOW_MS=900000           # Rate limit window (15 minutes)
RATE_LIMIT_MAX_REQUESTS=100           # Max requests per window
AUTH_RATE_LIMIT_MAX=5                 # Max auth requests per minute

# =============================================================================
# üåê NETWORK & CORS CONFIGURATION
# =============================================================================

# CORS Settings [REQUIRED FOR PRODUCTION]
CORS_ORIGINS=http://localhost:3000    # [REQUIRED] Comma-separated allowed origins

# Request Configuration
MAX_REQUEST_SIZE=10mb                 # Maximum request body size
COMPRESSION=true                      # Enable gzip compression

# Clustering [OPTIONAL]
CLUSTERING=false                      # Enable Node.js clustering
WORKERS=auto                          # Number of worker processes (auto = CPU count)

# =============================================================================
# üìä ANALYTICS & MONITORING [OPTIONAL]
# =============================================================================

# Feature Flags
ENABLE_ANALYTICS_DASHBOARD=true       # Enable analytics dashboard
ENABLE_DATABASE_ANALYTICS=true        # Enable database analytics
ENABLE_USER_ANALYTICS=true            # Enable user behavior analytics
ENABLE_RECOMMENDATIONS=true           # Enable recommendation system
ENABLE_PLAYLIST_CREATION=true         # Enable playlist creation
ENABLE_CHAT_HISTORY=true              # Enable chat history storage

# Performance Monitoring
METRICS_ENABLED=true                  # Enable metrics collection
CACHE_TTL=3600                        # Default cache TTL in seconds

# External Monitoring [OPTIONAL]
INFLUXDB_URL=                         # InfluxDB URL for metrics storage
INFLUXDB_TOKEN=                       # InfluxDB authentication token

# =============================================================================
# üê≥ DOCKER & DEPLOYMENT CONFIGURATION
# =============================================================================

# Docker Registry [OPTIONAL]
DOCKER_REGISTRY=                      # Docker registry URL (e.g., registry.digitalocean.com/your-registry)
DOCKER_REPOSITORY=echotune-ai         # Docker repository name
DOCKER_HUB_USERNAME=                  # Docker Hub username
DOCKER_HUB_TOKEN=                     # Docker Hub access token

# CI/CD Variables [AUTO-POPULATED IN DEPLOYMENT]
BUILD_ID=                             # Build identifier (auto-populated)
COMMIT_SHA=                           # Git commit SHA (auto-populated)
CI=false                              # Running in CI environment

# =============================================================================
# üõ†Ô∏è MCP SERVER CONFIGURATION [OPTIONAL]
# =============================================================================

# MCP Server Settings
MCP_SERVER_PORT=3001                  # MCP server port
MCP_SERVER_HOST=localhost             # MCP server host
MCP_URL=http://localhost:3001         # Complete MCP server URL
MCP_TIMEOUT=30000                     # MCP operation timeout in milliseconds
ENABLE_MCP_LOGGING=true               # Enable MCP operation logging

# Browser Automation (Puppeteer/Browserbase)
PUPPETEER_HEADLESS=true               # Run Puppeteer in headless mode
BROWSERBASE_API_KEY=                  # Browserbase API key for cloud browser automation
BROWSERBASE_PROJECT_ID=               # Browserbase project ID
BROWSERBASE_SESSION_ID=               # Browserbase session ID (auto-generated)

# Screenshot Service [OPTIONAL]
SCREENSHOT_WEBSITE_PORT=3002          # Screenshot service port
SCREENSHOT_DIR=./screenshots          # Directory for screenshot storage
TAKE_SCREENSHOTS=false                # Enable screenshot functionality
TEST_URL=http://localhost:3000        # URL for testing screenshots

# =============================================================================
# üìÅ LOGGING & BACKUP CONFIGURATION [OPTIONAL]
# =============================================================================

# Logging Settings
LOG_LEVEL=info                        # Log level: error, warn, info, debug
LOG_FILE=./logs/app.log              # Main log file path
ACCESS_LOG_FILE=./logs/access.log    # Access log file path
DEBUG=false                           # Enable debug mode (disable in production)

# Backup Configuration
BACKUP_ENABLED=false                  # Enable automatic backups
BACKUP_SCHEDULE=0 2 * * *            # Backup schedule (cron format: daily at 2 AM)
BACKUP_RETENTION_DAYS=30             # How many days to keep backups
DATABASE_BACKUP_ENABLED=false        # Enable database backups

# =============================================================================
# üîó EXTERNAL INTEGRATIONS [OPTIONAL]
# =============================================================================

# GitHub Integration (for issues, discussions)
GITHUB_TOKEN=                         # GitHub personal access token
GITHUB_PAT=                          # GitHub personal access token (alternative)

# Search Integration
BRAVE_API_KEY=                        # Brave Search API key

# =============================================================================
# üß™ DEVELOPMENT & TESTING [DEVELOPMENT ONLY]
# =============================================================================

# Development Settings (DISABLE IN PRODUCTION)
# DEBUG=false                         # Debug mode
# ENABLE_HOT_RELOAD=false             # Hot reload for development
# MOCK_EXTERNAL_APIS=false            # Mock external API calls

# =============================================================================
# üìã PRODUCTION DEPLOYMENT CHECKLIST
# =============================================================================

# Before deploying to production:
# 
# [ ] All [REQUIRED] values filled in
# [ ] Strong, unique secrets generated (JWT_SECRET, SESSION_SECRET)
# [ ] SSL certificates configured and paths verified
# [ ] Domain name configured and DNS pointing to server
# [ ] Database connection tested and working
# [ ] At least one LLM provider configured with valid API key
# [ ] Spotify app configured with correct redirect URIs
# [ ] CORS origins updated to production domains
# [ ] Rate limiting configured appropriately
# [ ] Monitoring and logging configured
# [ ] Backup strategy implemented (if needed)
# [ ] Environment variables secured (not in version control)
#
# =============================================================================
# üö® SECURITY NOTICE
# =============================================================================
#
# IMPORTANT: 
# - Never commit this file with real values to version control
# - Use strong, randomly generated secrets for JWT_SECRET and SESSION_SECRET
# - Store sensitive values securely (environment variables, secrets management)
# - Regularly rotate API keys and secrets
# - Review and update CORS origins for production
# - Monitor logs for security events
#
# =============================================================================