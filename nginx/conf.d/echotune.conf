# EchoTune AI - Ubuntu DigitalOcean Site Configuration
# Production-ready virtual host configuration with SSL, security, and performance optimizations

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name _;
    
    # Security headers for HTTP
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Allow Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Health check endpoint (no redirect)
    location /nginx-health {
        access_log off;
        return 200 "nginx healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name _;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    
    # SSL Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com https://sdk.scdn.co; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.spotify.com https://accounts.spotify.com; media-src 'self' https:;" always;
    
    # Connection and rate limiting
    limit_conn conn_limit_per_ip 10;
    limit_conn conn_limit_per_server 100;
    
    # Block bad bots
    if ($bad_bot) {
        return 403;
    }
    
    # Main application
    location / {
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        
        # Proxy settings
        proxy_pass http://echotune_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 500 502 503 504 /50x.html;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://echotune_app/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick timeout for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # API endpoints
    location /api/ {
        # Enhanced rate limiting for API
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://echotune_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API-specific timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 300s;
        
        # Enable caching for GET requests
        proxy_cache_methods GET HEAD;
        proxy_cache_valid 200 5m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    }
    
    # Authentication endpoints with stricter rate limiting
    location ~ ^/(login|register|auth|callback) {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://echotune_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Secure headers for auth endpoints
        add_header X-Frame-Options "DENY" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
    
    # MCP Server endpoints
    location /mcp/ {
        limit_req zone=api burst=30 nodelay;
        
        proxy_pass http://echotune_mcp/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Extended timeout for MCP operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 600s;
    }
    
    # Static files with aggressive caching
    location /static/ {
        alias /usr/share/nginx/html/static/;
        
        # Cache control
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Security for static files
        location ~* \.(php|asp|aspx|jsp|cgi|pl)$ {
            deny all;
            return 404;
        }
        
        # Compress static files
        gzip_static on;
        
        # CORS for web fonts and assets
        location ~* \.(eot|ttf|woff|woff2)$ {
            add_header Access-Control-Allow-Origin "*";
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Favicon
    location /favicon.ico {
        alias /usr/share/nginx/html/static/favicon.ico;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Robots.txt
    location /robots.txt {
        alias /usr/share/nginx/html/static/robots.txt;
        expires 1d;
        access_log off;
    }
    
    # Security: Block access to sensitive files and directories
    location ~ /\.(env|git|svn|htaccess) {
        deny all;
        return 404;
    }
    
    location ~ /(\.well-known/(?!acme-challenge)|config|backup|logs?|data|temp|cache)/ {
        deny all;
        return 404;
    }
    
    # Block common exploit attempts
    location ~ /(wp-admin|wp-login|phpmyadmin|admin|administrator|xmlrpc\.php) {
        deny all;
        return 404;
    }
    
    # Monitoring endpoints
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
    
    location /nginx-health {
        access_log off;
        return 200 "nginx healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Error pages
    location /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # Custom error pages with JSON responses for API endpoints
    location /404.html {
        internal;
        root /usr/share/nginx/html;
    }
}

# Monitoring server (internal access only)
server {
    listen 8080;
    server_name localhost;
    
    access_log off;
    
    location /health {
        return 200 "OK";
        add_header Content-Type text/plain;
    }
    
    location /status {
        stub_status on;
    }
    
    location /metrics {
        # Prometheus metrics endpoint
        proxy_pass http://echotune_app/metrics;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
}