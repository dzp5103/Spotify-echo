# Optimized Nginx container for serving static files and reverse proxy
FROM nginx:1.25-alpine

# Install certbot for Let's Encrypt
RUN apk add --no-cache \
    certbot \
    certbot-nginx \
    openssl \
    curl \
    jq \
    envsubst \
    && rm -rf /var/cache/apk/*

# Create directories for SSL certificates and static files
RUN mkdir -p /etc/nginx/ssl \
    && mkdir -p /var/www/html \
    && mkdir -p /var/log/nginx \
    && mkdir -p /etc/letsencrypt \
    && mkdir -p /scripts

# Copy nginx configuration template
COPY nginx/nginx.conf.template /etc/nginx/nginx.conf.template
COPY nginx/default.conf.template /etc/nginx/conf.d/default.conf.template

# Copy SSL setup and renewal scripts
COPY scripts/ssl-setup.sh /scripts/ssl-setup.sh
COPY scripts/ssl-renew.sh /scripts/ssl-renew.sh
COPY scripts/nginx-start.sh /scripts/nginx-start.sh

# Make scripts executable
RUN chmod +x /scripts/*.sh

# Create nginx user for better security
RUN addgroup -g 101 -S nginx || true \
    && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx || true

# Set proper permissions
RUN chown -R nginx:nginx /var/www/html \
    && chown -R nginx:nginx /var/log/nginx \
    && chown -R root:nginx /etc/nginx \
    && chmod 750 /etc/nginx

# Health check for nginx
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Expose ports
EXPOSE 80 443

# Use custom start script that handles SSL setup
ENTRYPOINT ["/scripts/nginx-start.sh"]